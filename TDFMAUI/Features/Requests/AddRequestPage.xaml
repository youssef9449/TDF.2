<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:TDFMAUI.Helpers"
             xmlns:vm="clr-namespace:TDFMAUI.ViewModels"
             xmlns:viewModels="clr-namespace:TDFMAUI.ViewModels"
             xmlns:converters="clr-namespace:TDFMAUI.Converters"
             x:DataType="viewModels:AddRequestViewModel"
             x:Class="TDFMAUI.Features.Requests.AddRequestPage"
             Title="{Binding IsEditMode, Converter={StaticResource BoolToStringConverter}, ConverterParameter='Edit Leave Request|Add Leave Request'}"
             BackgroundColor="{Binding Source={x:Static helpers:ThemeHelper.CurrentTheme}, Converter={StaticResource ThemeToBackgroundColorConverter}}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <helpers:BoolToStringConverter x:Key="BoolToStringConverter" />
            <converters:ValidationStateToColorConverter x:Key="ValidationColorConverter" />
            <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
            <converters:LeaveTypeToTimePickersVisibilityConverter x:Key="LeaveTypeToTimePickersVisibilityConverter" />
            <converters:LeaveTypeToEndDateVisibilityConverter x:Key="LeaveTypeToEndDateVisibilityConverter" />

            <Style x:Key="FormFieldTitleLabelStyle" TargetType="Label">
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="TextColor" Value="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="FontSize" Value="{OnPlatform WinUI=14, MacCatalyst=14, Default=14}" />
                <Style.Triggers>
                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Static helpers:DeviceHelper.IsDesktop}}" Value="True">
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Margin" Value="0,0,10,5" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Static helpers:DeviceHelper.IsLargeScreen}}" Value="True">
                        <Setter Property="FontSize" Value="16" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Static helpers:DeviceHelper.IsExtraLargeScreen}}" Value="True">
                        <Setter Property="FontSize" Value="18" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto,*,Auto" Padding="{OnIdiom Phone='15', Default='20'}">
        <!-- Page Title -->
        <Label Grid.Row="0"
               Text="{Binding Title, Source={RelativeSource AncestorType={x:Type ContentPage}}}"
               FontSize="{OnIdiom Phone=20, Default=24}"
               FontAttributes="Bold"
               TextColor="White"
               HorizontalOptions="Center"
               Margin="0,0,0,20">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="ScreenSizeStates">
                    <VisualState Name="LargeScreen">
                        <VisualState.StateTriggers>
                            <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsLargeScreen}}" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="FontSize" Value="26" />
                            <Setter Property="Margin" Value="0,5,0,25" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState Name="ExtraLargeScreen">
                        <VisualState.StateTriggers>
                            <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsExtraLargeScreen}}" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="FontSize" Value="30" />
                            <Setter Property="Margin" Value="0,10,0,30" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Label>

        <ScrollView Grid.Row="1">
            <VerticalStackLayout Spacing="15" x:Name="FormContainer">
                <VerticalStackLayout.MaximumWidthRequest>
                    <OnIdiom x:TypeArguments="x:Double" Phone="10000" Tablet="700" Desktop="600" />
                </VerticalStackLayout.MaximumWidthRequest>
                <VerticalStackLayout.HorizontalOptions>
                    <OnIdiom Default="Fill" Phone="Fill" Tablet="Center" Desktop="Center" />
                </VerticalStackLayout.HorizontalOptions>
                
                <Frame x:Name="FormFrame"
                       BackgroundColor="{StaticResource Primary}"
                       Padding="{OnIdiom Phone='12', Default='20'}"
                       CornerRadius="{OnPlatform WinUI=8, MacCatalyst=10, Default=15}"
                       HasShadow="True"
                       BorderColor="{OnPlatform WinUI={StaticResource WindowsBorderColor}, MacCatalyst={StaticResource MacOSControlBorderColor}, Default=Transparent}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="DeviceStates">
                            <VisualState Name="Desktop">
                                <VisualState.StateTriggers>
                                    <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsDesktop}}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default={StaticResource Primary}}" />
                                    <Setter Property="Padding" Value="20" />
                                    <Setter Property="Margin" Value="0,5,0,5" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Mobile">
                                <VisualState.StateTriggers>
                                    <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsMobile}}" />
                                </VisualState.StateTriggers>
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    
                    <Grid x:Name="FormGrid" 
                          ColumnDefinitions="{OnIdiom Phone='*', Default='Auto,*'}"
                          RowDefinitions="Auto,Auto,Auto,Auto,Auto"
                          ColumnSpacing="{OnPlatform WinUI=15, MacCatalyst=15, Default=10}"
                          RowSpacing="{OnPlatform WinUI=20, MacCatalyst=20, Default=15}">
                        
                        <!-- Leave Type -->
                        <Label Grid.Row="0" Grid.Column="0" 
                               Text="Leave Type" 
                               Style="{StaticResource FormFieldTitleLabelStyle}"/>
                        <Border Grid.Row="0" Grid.Column="1"
                                StrokeThickness="1"
                                Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='LeaveType'}"
                                Padding="0" 
                                BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default={StaticResource SurfaceColor}}">
                            <Picker Title="Select Leave Type"
                                    ItemsSource="{Binding LeaveTypes}"
                                    SelectedItem="{Binding SelectedLeaveType}"
                                    IsEnabled="{Binding IsNotBusy}"
                                    TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                    TitleColor="{OnPlatform WinUI={StaticResource WindowsControlDisabledColor}, MacCatalyst={StaticResource MacOSControlDisabledColor}, Default={StaticResource TextSecondaryColor}}"
                                    BackgroundColor="Transparent"/>
                        </Border>

                        <!-- Start Date -->
                        <Label Grid.Row="1" Grid.Column="0" 
                               Text="Start Date" 
                               Style="{StaticResource FormFieldTitleLabelStyle}"/>
                        <Border Grid.Row="1" Grid.Column="1"
                                StrokeThickness="1"
                                Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='StartDate'}"
                                Padding="0" 
                                BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default=Transparent}">
                            <DatePicker Date="{Binding StartDate}"
                                       Format="dddd, MMMM d, yyyy"
                                       TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                       MinimumDate="{Binding MinDate}"
                                       MaximumDate="{Binding MaxDate}"
                                       IsEnabled="{Binding IsNotBusy}"/>
                        </Border>

                        <!-- End Date -->
                        <Label Grid.Row="2" Grid.Column="0" 
                               Text="End Date" 
                               Style="{StaticResource FormFieldTitleLabelStyle}"
                               IsVisible="{Binding SelectedLeaveType, Converter={StaticResource LeaveTypeToEndDateVisibilityConverter}}"/>
                        <Border Grid.Row="2" Grid.Column="1"
                                StrokeThickness="1"
                                Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='EndDate'}"
                                Padding="0" 
                                BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default=Transparent}"
                                IsVisible="{Binding SelectedLeaveType, Converter={StaticResource LeaveTypeToEndDateVisibilityConverter}}">
                            <DatePicker Date="{Binding EndDate}"
                                       Format="dddd, MMMM d, yyyy"
                                       TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                       MinimumDate="{Binding StartDate}"
                                       MaximumDate="{Binding MaxDate}"
                                       IsEnabled="{Binding IsNotBusy}"
                                       IsVisible="{Binding SelectedLeaveType, Converter={StaticResource LeaveTypeToEndDateVisibilityConverter}}"/>
                        </Border>

                        <!-- Time Pickers -->
                        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                              IsVisible="{Binding SelectedLeaveType, Converter={StaticResource LeaveTypeToTimePickersVisibilityConverter}}"
                              ColumnDefinitions="*,*" 
                              ColumnSpacing="10" 
                              Margin="0,5,0,0">
                            <VerticalStackLayout Grid.Column="0">
                                <Label Text="From Time" Style="{StaticResource FormFieldTitleLabelStyle}"/>
                                <Border StrokeThickness="1"
                                        Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='StartTime'}"
                                        Padding="0" 
                                        BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default=Transparent}">
                                    <TimePicker Time="{Binding StartTime}"
                                               Format="t"
                                               TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                               IsEnabled="{Binding IsNotBusy}" />
                                </Border>
                            </VerticalStackLayout>
                            <VerticalStackLayout Grid.Column="1">
                                <Label Text="To Time" Style="{StaticResource FormFieldTitleLabelStyle}"/>
                                <Border StrokeThickness="1"
                                        Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='EndTime'}"
                                        Padding="0" 
                                        BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default=Transparent}">
                                    <TimePicker Time="{Binding EndTime}"
                                               Format="t"
                                               TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                               IsEnabled="{Binding IsNotBusy}" />
                                </Border>
                            </VerticalStackLayout>
                        </Grid>

                        <!-- Reason -->
                        <Label Grid.Row="4" Grid.Column="0" 
                               Text="Reason" 
                               Style="{StaticResource FormFieldTitleLabelStyle}"/>
                        <Border Grid.Row="4" Grid.Column="1"
                                StrokeThickness="1"
                                Stroke="{Binding ValidationErrors, Converter={StaticResource ValidationColorConverter}, ConverterParameter='Reason'}"
                                Padding="0" 
                                BackgroundColor="{OnPlatform WinUI={StaticResource WindowsControlBackgroundColor}, MacCatalyst={StaticResource MacOSControlBackgroundColor}, Default=Transparent}">
                            <Editor Text="{Binding RequestReason}" 
                                   Placeholder="Enter reason for leave (optional)" 
                                   TextColor="{OnPlatform WinUI={StaticResource WindowsControlForegroundColor}, MacCatalyst={StaticResource MacOSControlForegroundColor}, Default=White}"
                                   PlaceholderColor="{OnPlatform WinUI={StaticResource WindowsControlDisabledColor}, MacCatalyst={StaticResource MacOSControlDisabledColor}, Default={StaticResource TextSecondaryColor}}"
                                   MaxLength="200" 
                                   AutoSize="TextChanges" 
                                   HeightRequest="100"
                                   IsEnabled="{Binding IsNotBusy}" />
                        </Border>
                    </Grid>
                </Frame>
            </VerticalStackLayout>
        </ScrollView>

        <FlexLayout Grid.Row="2"
                    Wrap="Wrap"
                    JustifyContent="Center"
                    Direction="Row"
                    Margin="{OnPlatform WinUI='0,20,0,10', MacCatalyst='0,20,0,10', Default='0,10,0,0'}">
            <Button x:Name="SubmitButton"
                    Text="Submit"
                    Command="{Binding SubmitRequestCommand}"
                    IsEnabled="{Binding IsNotBusy}"
                    BackgroundColor="{OnPlatform WinUI={StaticResource WindowsAccentColor}, MacCatalyst={StaticResource MacOSAccentColor}, Default={StaticResource Primary}}"
                    TextColor="White"
                    WidthRequest="{OnPlatform WinUI=140, MacCatalyst=140, Default={OnIdiom Phone=100, Default=120}}"
                    HeightRequest="{OnPlatform WinUI=50, MacCatalyst=50, Default={OnIdiom Phone=40, Default=45}}"
                    FontSize="{OnPlatform WinUI=16, MacCatalyst=16, Default={OnIdiom Phone=14, Default=16}}"
                    CornerRadius="{OnPlatform WinUI=4, MacCatalyst=6, Default=10}"
                    Margin="{OnPlatform WinUI='10,0', MacCatalyst='10,0', Default='5'}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="ScreenSizeStates">
                        <VisualState Name="LargeScreen">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsLargeScreen}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="WidthRequest" Value="160" />
                                <Setter Property="HeightRequest" Value="50" />
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Margin" Value="15,0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="ExtraLargeScreen">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsExtraLargeScreen}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="WidthRequest" Value="180" />
                                <Setter Property="HeightRequest" Value="55" />
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Margin" Value="20,0" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Button>
            
            <Button x:Name="CancelButton"
                    Text="Cancel"
                    Command="{Binding CancelCommand}"
                    IsEnabled="{Binding IsNotBusy}"
                    BackgroundColor="{OnPlatform WinUI=#555555, MacCatalyst=#666666, Default={StaticResource TextSecondaryColor}}"
                    TextColor="White"
                    WidthRequest="{OnPlatform WinUI=140, MacCatalyst=140, Default={OnIdiom Phone=100, Default=120}}"
                    HeightRequest="{OnPlatform WinUI=50, MacCatalyst=50, Default={OnIdiom Phone=40, Default=45}}"
                    FontSize="{OnPlatform WinUI=16, MacCatalyst=16, Default={OnIdiom Phone=14, Default=16}}"
                    CornerRadius="{OnPlatform WinUI=4, MacCatalyst=6, Default=10}"
                    Margin="{OnPlatform WinUI='10,0', MacCatalyst='10,0', Default='5'}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup Name="ScreenSizeStates">
                        <VisualState Name="LargeScreen">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsLargeScreen}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="WidthRequest" Value="160" />
                                <Setter Property="HeightRequest" Value="50" />
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="Margin" Value="15,0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState Name="ExtraLargeScreen">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding Source={x:Static helpers:DeviceHelper.IsExtraLargeScreen}}" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Property="WidthRequest" Value="180" />
                                <Setter Property="HeightRequest" Value="55" />
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Margin" Value="20,0" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Button>
        </FlexLayout>
    </Grid>
</ContentPage>
